name: 'C++ CI'

on:
  push:
    branches:
      - master
      - main
      - feature/github_actions

jobs:
  dz_1:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dz_1  
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y          
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
  dz_2:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dz_2  
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y          
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.run_number }}
    #     release_name: Release ${{ github.run_number }}
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dz_2/filter_ip-0.0.${{ github.run_number }}-Linux.deb
    #     asset_name: filter_ip-0.0.${{ github.run_number }}-Linux.deb
    #     asset_content_type: application/vnd.debian.binary-package
  dz_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dz_3  
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y          
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.run_number }}
    #     release_name: Release ${{ github.run_number }}
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dz_3/allocate-0.0.${{ github.run_number }}-Linux.deb
    #     asset_name: allocate-0.0.${{ github.run_number }}-Linux.deb
    #     asset_content_type: application/vnd.debian.binary-package
  dz_4:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dz_4  
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz -y          
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
    - run: cmake --build . --target doc
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.run_number }}
    #     release_name: Release ${{ github.run_number }}
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dz_4/print_ip-0.0.${{ github.run_number }}-Linux.deb
    #     asset_name: print_ip-0.0.${{ github.run_number }}-Linux.deb
    #     asset_content_type: application/vnd.debian.binary-package
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
    #       publish_dir: ./dz_4/doc/html/
    #       enable_jekyll: false
    #       allow_empty_commit: false
    #       force_orphan: true
    #       publish_branch: document
  dz_5:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dz_5  
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz -y          
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
    - run: cmake --build . --target doc
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.run_number }}
    #     release_name: Release ${{ github.run_number }}
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dz_5/editor-0.0.${{ github.run_number }}-Linux.deb
    #     asset_name: editor-0.0.${{ github.run_number }}-Linux.deb
    #     asset_content_type: application/vnd.debian.binary-package
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
    #       publish_dir: ./dz_5/doc/html/
    #       enable_jekyll: false
    #       allow_empty_commit: false
    #       force_orphan: true
    #       publish_branch: document
  dz_6:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./dz_6  
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz -y          
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - run: cmake --build . --target doc
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dz_6/matrix-0.0.${{ github.run_number }}-Linux.deb
      #     asset_name: matrix-0.0.${{ github.run_number }}-Linux.deb
      #     asset_content_type: application/vnd.debian.binary-package
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #       github_token: ${{ secrets.GITHUB_TOKEN }}
      #       publish_dir: ./dz_6/doc/html/
      #       enable_jekyll: false
      #       allow_empty_commit: false
      #       force_orphan: true
      #       publish_branch: document
  dz_7:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./dz_7  
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz -y          
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - run: cmake --build . --target doc
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dz_7/bulk-0.0.${{ github.run_number }}-Linux.deb
      #     asset_name: bulk-0.0.${{ github.run_number }}-Linux.deb
      #     asset_content_type: application/vnd.debian.binary-package
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #       github_token: ${{ secrets.GITHUB_TOKEN }}
      #       publish_dir: ./dz_7/doc/html/
      #       enable_jekyll: false
      #       allow_empty_commit: false
      #       force_orphan: true
      #       publish_branch: document
  dz_8:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./dz_8  
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz libboost-all-dev  -y                
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - run: cmake --build . --target doc
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dz_8/bayan-0.0.${{ github.run_number }}-Linux.deb
      #     asset_name: bayan-0.0.${{ github.run_number }}-Linux.deb
      #     asset_content_type: application/vnd.debian.binary-package
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #       github_token: ${{ secrets.GITHUB_TOKEN }}
      #       publish_dir: ./dz_8/doc/html/
      #       enable_jekyll: false
      #       allow_empty_commit: false
      #       force_orphan: true
      #       publish_branch: document
  dz_9:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./dz_9  
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz libboost-all-dev  -y                
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - run: cmake --build . --target doc
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dz_9/async-0.0.${{ github.run_number }}-Linux.deb
      #     asset_name: async-0.0.${{ github.run_number }}-Linux.deb
      #     asset_content_type: application/vnd.debian.binary-package
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #       github_token: ${{ secrets.GITHUB_TOKEN }}
      #       publish_dir: ./dz_9/doc/html/
      #       enable_jekyll: false
      #       allow_empty_commit: false
      #       force_orphan: true
      #       publish_branch: document   
  dz_10:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./dz_10  
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz libboost-all-dev  -y                
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - run: cmake --build . --target doc
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     release_name: Release ${{ github.run_number }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dz_10/bulk_server-0.0.${{ github.run_number }}-Linux.deb
      #     asset_name: bulk_server-0.0.${{ github.run_number }}-Linux.deb
      #     asset_content_type: application/vnd.debian.binary-package
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #       github_token: ${{ secrets.GITHUB_TOKEN }}
      #       publish_dir: ./dz_10/doc/html/
      #       enable_jekyll: false
      #       allow_empty_commit: false
      #       force_orphan: true
      #       publish_branch: document            
  dz_11:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./dz_11  
      steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sudo apt-get update &&  sudo apt-get install doxygen graphviz libboost-all-dev  -y                
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_CATCH_TEST=ON
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - run: cmake --build . --target doc
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dz_11/join_server-0.0.${{ github.run_number }}-Linux.deb
          asset_name: join_server-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./dz_11/doc/html/
            enable_jekyll: false
            allow_empty_commit: false
            force_orphan: true
            publish_branch: document            